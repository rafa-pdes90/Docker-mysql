version: build-{build}.{branch}
    
# Skipping commits with particular message or from specific user
skip_commits:
  message: /wip/

image: Visual Studio 2017

environment:
  DOCKER_USER:
    secure: 8ytgwuh2SNKTbSi+N8Mm0g==
  DOCKER_PASS:
    secure: /pXE9T3huXIXgID8jW1rfA==
  DOCKER_IMAGE_TAG_PREFIX: rafaelpdes/mysql
  BASE_BRANCH: 5.6
  BASE_RELEASE: 39
  BASE_LATEST: 5.6.39-nanoserver-sac2016

install:
  - ps: |
      $DOCKER_IMAGE_TAG_SUFFIX = $null
      if ($env:APPVEYOR_REPO_BRANCH -eq $env:BASE_BRANCH) {
        $DOCKER_IMAGE_TAG_SUFFIX = $env:BASE_LATEST
      } else {
        $DOCKER_IMAGE_TAG_SUFFIX = $env:APPVEYOR_REPO_BRANCH
      }
      
      $v1,$v2,$env:RELEASE,$env:VARIANT = $DOCKER_IMAGE_TAG_SUFFIX.Split('.').Split('-', 2)
      $env:VERSION = "$v1.$v2"
      
      [Environment]::SetEnvironmentVariable('dockerImage', ('{0}:{1}' -f $env:DOCKER_IMAGE_TAG_PREFIX, $DOCKER_IMAGE_TAG_SUFFIX), [EnvironmentVariableTarget]::Process);
      [Environment]::SetEnvironmentVariable('buildDirectory', ('{0}/{1}' -f $env:VERSION, $env:VARIANT), [EnvironmentVariableTarget]::Process);

build_script:
  - cmd: appveyor-retry docker build --pull -t %dockerImage% %buildDirectory%

after_build:
  - ps: |
      if ($env:BASE_BRANCH -eq "master") {
        docker tag "$env:dockerImage" "$($env:DOCKER_IMAGE_TAG_PREFIX):$env:VARIANT"
      }
      if ($env:APPVEYOR_REPO_BRANCH -eq $env:BASE_BRANCH) {
        if ($env:APPVEYOR_REPO_BRANCH -eq "master") {
          docker tag "$env:dockerImage" "$($env:DOCKER_IMAGE_TAG_PREFIX):latest"
          docker tag "$env:dockerImage" "$($env:DOCKER_IMAGE_TAG_PREFIX):$env:VERSION"
        } else {
          docker tag "$env:dockerImage" "$($env:DOCKER_IMAGE_TAG_PREFIX):$env:APPVEYOR_REPO_BRANCH"
        }
        
        docker tag "$env:dockerImage" "$($env:DOCKER_IMAGE_TAG_PREFIX):$env:VERSION.$env:RELEASE"
      }
      if ($env:RELEASE -eq $env:BASE_RELEASE) {
        docker tag "$env:dockerImage" "$($env:DOCKER_IMAGE_TAG_PREFIX):$env:VERSION-$env:VARIANT"
      }
      
      docker images

test_script:
  - cmd: docker run --rm %dockerImage% MySQL --version

deploy_script:
  - ps: |
      docker login -u="$env:DOCKER_USER" -p="$env:DOCKER_PASS"
      docker push "$env:DOCKER_IMAGE_TAG_PREFIX"
